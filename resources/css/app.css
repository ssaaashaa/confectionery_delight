@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Montserrat";
  src: url(../fonts/Montserrat-Regular.woff2) format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(../fonts/Montserrat-Medium.woff2) format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Leotaro";
  src: url(../fonts/Leotaro-Regular.woff2) format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-gradient: linear-gradient(#030303, #2E1D1F, #030303);
  --color-dark: #2E1D1F;
  --color-dark-transparent: rgba(5, 4, 4, 0.2);
  --color-light: #FFFFFF;
  --color-accent: #EACAA1;
  --color-bg-button: #EACAA1;
  --border-button: 1px solid var(--color-light);
  --border-button-hover: 1px solid var(--color-accent);
  --border-radio-button: 1px solid var(--color-accent);
  --border-raduis-button: 10px;
  --font-family-base: "Montserrat";
  --container-width: 1110px;
  --container-padding-x: 20px;
  --section-padding-y: 70px;
  --input-height: 40px;
  --button-height: 47px;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(14px, 1vw, 16px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-light);
  background: var(--color-gradient);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Leotaro";
  color: var(--color-accent);
  font-weight: normal;
}

h1 {
  font-size: clamp(26px, 2.625vw, 42px);
}

h2 {
  font-size: clamp(22px, 2vw, 32px);
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: var(--button-height);
  padding-inline: 40px;
  font-size: 15px;
  color: var(--color-light);
  background: transparent;
  border: var(--border-button);
  border-radius: var(--border-raduis-button);
}
@media (hover: hover) {
  .button:hover {
    border: var(--border-button-hover);
    cursor: pointer;
  }
}
@media (hover: none) {
  .button:active {
    border: var(--border-button-hover);
    cursor: pointer;
  }
}

.header {
  padding-top: 25px;
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 100px;
}
.header__menu, .header__extra {
  margin-left: auto;
  font-size: 15px;
}
.header__menu-list, .header__extra-list {
  display: flex;
  align-items: center;
  column-gap: 20px;
}
.header__menu-link, .header__extra-link {
  position: relative;
  height: 25px;
  display: inline-flex;
  align-items: center;
}
@media (hover: hover) {
  .header__menu-link:hover::after, .header__extra-link:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .header__menu-link:active::after, .header__extra-link:active::after {
    width: 100%;
  }
}
.header__menu-link::after, .header__extra-link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 1px;
  background-color: var(--color-accent);
  transition-duration: inherit;
}

/*# sourceMappingURL=app.css.map */
